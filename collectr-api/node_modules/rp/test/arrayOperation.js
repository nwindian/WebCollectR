var should = require("should");
var rp = require("../");
var checkRefs = require("./checkRefs");

describe("arrayOperation", function() {
	it("should report array size", checkRefs(function() {
		var x = rp.variable([1, 2, 3]);
		var y = rp.const("size=").plus(x.size());
		var s = x.size();
		var computedSize = rp.computed(function() {
			return x.size()();
		});
		x.isWritable().should.be.eql(true);
		y.isWritable().should.be.eql(false);
		s.isWritable().should.be.eql(false);
		computedSize.isWritable().should.be.eql(false);
		y().should.be.eql("size=3");
		x.push(4);
		s().should.be.eql(4);
		y().should.be.eql("size=4");
		x.shift();
		y().should.be.eql("size=3");
		x.set([1,2,3,4,5,6]);
		y().should.be.eql("size=6");
	}));
	it("should map an array", checkRefs(function() {
		var x = rp.variable([1, 2, 3, 4, 5]);
		var factor = rp.variable(2);
		var y = x.map(function(item) {
			return item * factor();
		// TODO memory leak here!!!
		// }).map(function(item) {
			// return item;
		});
		y.isWritable().should.be.eql(false);
		y().should.be.eql([2, 4, 6, 8, 10]);
		x.push(6);
		y().should.be.eql([2, 4, 6, 8, 10, 12]);
		x.shift();
		y().should.be.eql([4, 6, 8, 10, 12]);
		x.splice(2, 2, 4.5);
		y().should.be.eql([4, 6, 9, 12]);
		factor.set(4);
		y().should.be.eql([8, 12, 18, 24]);
	}));
	it("should filter an array", checkRefs(function() {
		var x = rp.variable([1, 2, 3, 4, 5]);
		var even = rp.variable(true);
		var y = x.map(function(item) {
			return item;
		}).filter(function(item) {
			return even() ? item % 2 === 0 : item % 2 === 1;
		});
		y.isWritable().should.be.eql(false);
		y().should.be.eql([2, 4]);
		x.push(6);
		x.push(7);
		y().should.be.eql([2, 4, 6]);
		x.unshift(0);
		y().should.be.eql([0, 2, 4, 6]);
		even.set(false);
		y().should.be.eql([1, 3, 5, 7]);
		x.shift();
		y().should.be.eql([1, 3, 5, 7]);
		x.shift();
		y().should.be.eql([3, 5, 7]);
		x.splice(2, 2, 100, 101);
		y().should.be.eql([3, 101, 7]);
	}));
});